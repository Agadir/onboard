<% 
  # we are breaking MVC pattern here: lots of "logic" is put in the view
  # and in the Sinatra routes, instead of lib/ ; but Sinatra itself
  # encourages non-MVC development, so...

  groups        = objects[:groups]
  fgnames       = objects[:fgnames]
  fgnumbers     = fgnames.keys
  sqlfgnumbers  = groups.values.uniq
  allfgnumbers  = (fgnumbers | sqlfgnumbers).sort
  
%>

<h2><%= title %></h2>

<h3>Group Mapping</h3>

<table>
  <thead>
    <tr>
      <th>SQL/RADIUS Group</th>
      <th>DansGuardian Filter Group</th>
    </tr>
  </thead>
  <tbody>
    <!-- allow future implementation of "update" -->
    <input type="hidden" name="action" value="rewrite"/>
    <% groups.each_pair do |radgroup, fgid| %>
      <tr>
        <td>
          <input type="text" name="groups[][sqlname]" value="<%= radgroup %>"/>
        </th>
        <td>
          <select name="groups[][fgid]">
            <% allfgnumbers.each do |n| %>
              <% print_n = sprintf("%02d", n) %> 
              <% selected = (n == fgid ? 'selected' : '') %> 
              <% if fgnumbers.include? n %>
                <option <%= selected %> value="<%= n %>"><%= print_n %>: <%= fgnames[n] %></option>
              <% else %>
                <option <%= selected %> class="error" value="<%= n %>"><%= print_n %>: (non-existent!)</option>
              <% end %>
            <% end %>
          </select>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

